//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.01.27 at 03:21:12 PM EST 
//


package fiserv.rc.gmf.toolkit.proxy;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ChkSvcPvdrType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ChkSvcPvdrType">
 *   &lt;restriction base="{com/fiserv/Merchant/gmfV10.02}Max12AN">
 *     &lt;enumeration value="TeleCheck"/>
 *     &lt;enumeration value="TeleCheckECA"/>
 *     &lt;enumeration value="TeleCheckICA"/>
 *     &lt;enumeration value="TeleCheckCBP"/>
 *     &lt;enumeration value="TeleCheckPPD"/>
 *     &lt;enumeration value="Certegy"/>
 *     &lt;enumeration value="MoneyCode"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ChkSvcPvdrType")
@XmlEnum
public enum ChkSvcPvdrType {

    @XmlEnumValue("TeleCheck")
    TELE_CHECK("TeleCheck"),
    @XmlEnumValue("TeleCheckECA")
    TELE_CHECK_ECA("TeleCheckECA"),
    @XmlEnumValue("TeleCheckICA")
    TELE_CHECK_ICA("TeleCheckICA"),
    @XmlEnumValue("TeleCheckCBP")
    TELE_CHECK_CBP("TeleCheckCBP"),
    @XmlEnumValue("TeleCheckPPD")
    TELE_CHECK_PPD("TeleCheckPPD"),
    @XmlEnumValue("Certegy")
    CERTEGY("Certegy"),
    @XmlEnumValue("MoneyCode")
    MONEY_CODE("MoneyCode");
    private final String value;

    ChkSvcPvdrType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ChkSvcPvdrType fromValue(String v) {
        for (ChkSvcPvdrType c: ChkSvcPvdrType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
