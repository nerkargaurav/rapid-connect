//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.01.27 at 03:21:12 PM EST 
//


package fiserv.rc.gmf.toolkit.proxy;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TranIntgClassType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TranIntgClassType">
 *   &lt;restriction base="{com/fiserv/Merchant/gmfV10.02}Max10AN">
 *     &lt;enumeration value="Checkout"/>
 *     &lt;enumeration value="Digital"/>
 *     &lt;enumeration value="EMV"/>
 *     &lt;enumeration value="Enhanced"/>
 *     &lt;enumeration value="Generic"/>
 *     &lt;enumeration value="Keyed"/>
 *     &lt;enumeration value="Swiped"/>
 *     &lt;enumeration value="Token"/>
 *     &lt;enumeration value="Unknown"/>
 *     &lt;enumeration value="UnknownCNP"/>
 *     &lt;enumeration value="Validated"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "TranIntgClassType")
@XmlEnum
public enum TranIntgClassType {

    @XmlEnumValue("Checkout")
    CHECKOUT("Checkout"),
    @XmlEnumValue("Digital")
    DIGITAL("Digital"),
    EMV("EMV"),
    @XmlEnumValue("Enhanced")
    ENHANCED("Enhanced"),
    @XmlEnumValue("Generic")
    GENERIC("Generic"),
    @XmlEnumValue("Keyed")
    KEYED("Keyed"),
    @XmlEnumValue("Swiped")
    SWIPED("Swiped"),
    @XmlEnumValue("Token")
    TOKEN("Token"),
    @XmlEnumValue("Unknown")
    UNKNOWN("Unknown"),
    @XmlEnumValue("UnknownCNP")
    UNKNOWN_CNP("UnknownCNP"),
    @XmlEnumValue("Validated")
    VALIDATED("Validated");
    private final String value;

    TranIntgClassType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TranIntgClassType fromValue(String v) {
        for (TranIntgClassType c: TranIntgClassType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
