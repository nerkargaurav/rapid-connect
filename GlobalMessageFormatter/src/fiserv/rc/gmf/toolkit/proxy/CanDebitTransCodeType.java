//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.01.27 at 03:21:12 PM EST 
//


package fiserv.rc.gmf.toolkit.proxy;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CanDebitTransCodeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CanDebitTransCodeType">
 *   &lt;restriction base="{com/fiserv/Merchant/gmfV10.02}Max17AN">
 *     &lt;enumeration value="KeyRequest"/>
 *     &lt;enumeration value="Saving"/>
 *     &lt;enumeration value="Checking"/>
 *     &lt;enumeration value="RefundSaving"/>
 *     &lt;enumeration value="RefundChecking"/>
 *     &lt;enumeration value="AdjRefundSaving"/>
 *     &lt;enumeration value="AdjRefundChecking"/>
 *     &lt;enumeration value="AdjSaving"/>
 *     &lt;enumeration value="AdjChecking"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "CanDebitTransCodeType")
@XmlEnum
public enum CanDebitTransCodeType {

    @XmlEnumValue("KeyRequest")
    KEY_REQUEST("KeyRequest"),
    @XmlEnumValue("Saving")
    SAVING("Saving"),
    @XmlEnumValue("Checking")
    CHECKING("Checking"),
    @XmlEnumValue("RefundSaving")
    REFUND_SAVING("RefundSaving"),
    @XmlEnumValue("RefundChecking")
    REFUND_CHECKING("RefundChecking"),
    @XmlEnumValue("AdjRefundSaving")
    ADJ_REFUND_SAVING("AdjRefundSaving"),
    @XmlEnumValue("AdjRefundChecking")
    ADJ_REFUND_CHECKING("AdjRefundChecking"),
    @XmlEnumValue("AdjSaving")
    ADJ_SAVING("AdjSaving"),
    @XmlEnumValue("AdjChecking")
    ADJ_CHECKING("AdjChecking");
    private final String value;

    CanDebitTransCodeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CanDebitTransCodeType fromValue(String v) {
        for (CanDebitTransCodeType c: CanDebitTransCodeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
